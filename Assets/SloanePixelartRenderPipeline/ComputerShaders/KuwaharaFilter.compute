#include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Color.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Packing.hlsl"

#pragma kernel Main

Texture2D<float4> _ConnectivityResultBuffer;
Texture2D<float4> _ShapePropertyBuffer;
Texture2D<float4> _Source;
RWTexture2D<float4> _Target;

uint _Width;
uint _Height;

[numthreads(8,8,1)]
void Main (uint3 id : SV_DispatchThreadID)
{
    if(id.x > uint(_Width) || id.y > uint(_Height)) return;

    float4 connectInfo = _ConnectivityResultBuffer[id.xy];
    int connectData;
    float fakeFloot = 0.0;
    UnpackFloatInt8bit(connectInfo.a, 256.0, fakeFloot, connectData);

    int connectedToRight = (connectData & (1 << 7)) > 0 ? 1 : 0;
    int connectedToLeft = (connectData & (1 << 6)) > 0 ? 1 : 0;
    int connectedToUp = (connectData & (1 << 5)) > 0 ? 1 : 0;
    int connectedToDown = (connectData & (1 << 4)) > 0 ? 1 : 0;

    float minVar = 65535.0;
    float4 averageColor = float4(0.0, 0.0, 0.0, 1.0);
    float3 currentColor = _Source[id.xy].rgb;

    if(connectedToRight == 1)
    {
        float3 col = _Source[id.xy + int2(1, 0)].rgb;
        float3 diff = col.rgb - currentColor;
        float var = dot(diff, diff);
        if(var < minVar)
        {
            minVar = var;
            averageColor.rgb = (col + currentColor) / 2.0;
        }
    }

    if(connectedToLeft == 1)
    {
        float3 col = _Source[id.xy + int2(-1, 0)].rgb;
        float3 diff = col.rgb - currentColor;
        float var = dot(diff, diff);
        if(var < minVar)
        {
            minVar = var;
            averageColor.rgb = (col + currentColor) / 2.0;
        }
    }

    if(connectedToUp == 1)
    {
        float3 col = _Source[id.xy + int2(0, 1)].rgb;
        float3 diff = col.rgb - currentColor;
        float var = dot(diff, diff);
        if(var < minVar)
        {
            minVar = var;
            averageColor.rgb = (col + currentColor) / 2.0;
        }
    }

    if(connectedToDown == 1)
    {
        float3 col = _Source[id.xy + int2(0, -1)].rgb;
        float3 diff = col.rgb - currentColor;
        float var = dot(diff, diff);
        if(var < minVar)
        {
            minVar = var;
            averageColor.rgb = col;
        }
    }

    _Target[id.xy] = averageColor;
}
